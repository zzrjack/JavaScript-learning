字符正则:
//1.定义正则 reg中存储的是对象
let reg=/前端/
// 2.判断是否有符合规则的字符串
//test()方法
reg.test('我们大家都在学前端')
//元字符
 [a-z]  //26个英文字母
 1.边界符
 ^ 开头 表示匹配行首文本
 $ 结尾 表示匹配行尾的文本
 ^和$一起，表示必须是精确匹配

 2.量词
 * 量词n>=0
 + 重复一次或更多次
 ? 重复0次或一次
 {n} 重复n次或更多次
 {n,} 重复n次或更多次
 {n,m} 重复n到m次

 3.字符类[]
  [-] 连字符 表示一个范围
  [a-z] 表示a到z 26个字母
  [^] 取反符号 例如[^a-z] 匹配除了小写字母以外的字符
  . 匹配除换行符之外的任何单一字符
  预定义类
  /d 匹配0-9之间的任意数字
  /D 匹配0-9以外的字符，相当[^0-9]
  /w 匹配任意的字母、数字下划线，相当于[A-Za-z0-9_]
  /W 相当于[^A-Za-z0-9_]
  /s 匹配空格（包括换行符，制表符、空格符等），相当于[\t\r\n\v\f]
  /S 匹配非空格字符，相当于[^\t\r\n\v\f]
  日期格式：^\d{4}-\d{1,2}-\d{1,2}
 
 /表达式/修饰符
 i ，正则匹配不区分大小写
 g ，匹配所有满足正则表达式的的结果 
 替换replace
 字符串.replace(/正则表达式/,'替换的文本')
 